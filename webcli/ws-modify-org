#!/usr/bin/env ruby

FILEDIR = File.dirname(__FILE__)
require "getoptlong"
require FILEDIR + "/ws-config"
require FILEDIR + "/deps/client_utils"
require FILEDIR + "/deps/ws_adapter"

#USAGE = "USAGE: ws-modify-org -n <name> -o <orgId> -i <introduce>" 

command_desc={"cmd"=>"create-org",
               "opts"=> {"name"=>["n",1,""], 
               "orgId"=>["o",1,""],
               "introduce"=>["i",1,""]}}

USAGE = Client_Utils.generate_usage(command_desc)

if ARGV[0] == "--help" or ARGV[0] == "-h"
	puts USAGE
	exit 0
end

opts = GetoptLong.new(
[ '--name', '-n', GetoptLong::REQUIRED_ARGUMENT ],
[ '--orgId', '-o', GetoptLong::REQUIRED_ARGUMENT ],
[ '--introduce', '-i', GetoptLong::REQUIRED_ARGUMENT ]
)

name = nil
orgId = nil
intro = nil

begin
  opts.each do |opt, arg|
    case opt
      when '--name'
        name = arg
      when '--orgId'
        orgId = arg
      when '--introduce'
        intro = arg
    end
  end
rescue GetoptLong::InvalidOption
  puts USAGE
  exit 1
rescue GetoptLong::MissingArgument
  puts  USAGE
  exit 1
end

if name.nil? or orgId.nil?
  puts USAGE
  exit 1
end

ws = WSAdapter.new()

resp = ws.modify_org(name,orgId,intro)

if resp.size == 0
  Client_Utils.print_msg("create_fail")	
  exit_code = 0
elsif resp.first["error"] != nil
  Client_Utils.print_reason(resp.first)
  exit_code = 4   
else 
  exit_code = Client_Utils.print_table(resp, WS_ORG_DISPLAY, true)
end 

Client_Utils.print_msg("transaction_complete")
exit(exit_code)

